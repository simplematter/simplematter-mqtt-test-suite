scenarioName: kafkaToMqtt

rampUpSeconds: 10
rampUpSeconds: ${?MQTT_LOAD_RAMP_UP_SECONDS}

actionsDuringRampUp: false
actionsDuringRampUp: ${?MQTT_LOAD_ACTIONS_DURING_RAMP_UP}

durationSeconds: 33
durationSeconds: ${?MQTT_LOAD_DURATION_SECONDS}

topicsPerNode = 10
topicsPerNode = ${?MQTT_LOAD_TOPICS_PER_NODE}

topicGroupsPerNode = 5
topicGroupsPerNode = ${?MQTT_LOAD_TOPIC_GROUPS_PER_NODE}

subscribingClientsPerNode = 10
subscribingClientsPerNode = ${?MQTT_LOAD_SUBSCRIBING_CLIENTS_PER_NODE}

subscribeTopicsPerClient = 1
subscribeTopicsPerClient = ${?MQTT_SUBSCRIBE_TOPICS_PER_CLIENT}

subscribeTopicGroupsPerClient = 0
subscribeTopicGroupsPerClient = ${?MQTT_LOAD_SUBSCRIBE_TOPIC_GROUPS_PER_CLIENT}

subscribeWildcardMessageDeduplicate = true
subscribeWildcardMessageDeduplicate = ${?MQTT_LOAD_SUBSCRIBE_WILDCARD_MESSAGE_DEDUPLICATE}

topicPrefix: "mqtt-testsuite"
topicPrefix: ${?MQTT_LOAD_TOPIC_PREFIX}
clientPrefix: "mqtt-testsuite-"
clientPrefix: ${?MQTT_LOAD_CLIENT_PREFIX}
randomizeClientPrefix: true
randomizeClientPrefix: ${?MQTT_LOAD_RANDOMIZE_CLIENT_PREFIX}

qos: 0
qos: ${?MQTT_LOAD_QOS}
qos: ${?MQTT_LOAD_SUBSCRIBE_QOS}

kafkaProducerMessagesPerSecond = 1.0
kafkaProducerMessagesPerSecond = ${?MQTT_LOAD_KAFKA_PRODUCER_MESSAGE_PER_SECOND}

kafkaProducerAcks = "1"
kafkaProducerAcks = ${?MQTT_LOAD_KAFKA_PRODUCER_ACKS}

messageMinSize: 10
messageMinSize: ${?MQTT_LOAD_MESSAGE_MIN_SIZE}
messageMaxSize: 600
messageMaxSize: ${?MQTT_LOAD_MESSAGE_MAX_SIZE}

kafkaDefaultTopic: "mqtt_messages"
kafkaDefaultTopic: ${?MQTT_LOAD_KAFKA_DEFAULT_TOPIC}

